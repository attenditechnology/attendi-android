plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

def attendiCustomerKey = localProperties.getProperty("ATTENDI_CUSTOMER_KEY", "")

android {

    compileSdk = compile_sdk_version

    defaultConfig {
        applicationId "nl.attendi.attendispeechserviceexample"
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
        buildConfigField "String", "ATTENDI_CUSTOMER_KEY", "\"${attendiCustomerKey}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }

    kotlin {
        jvmToolchain jvm_target_version
    }

    buildFeatures {
        compose = true
        buildConfig = true
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    namespace = 'nl.attendi.attendispeechserviceexample'
}

dependencies {
    // Dependencies
    implementation project(path: ':attendispeechservice')

    // Compose
    implementation platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"

    // Essentials
    implementation "androidx.core:core-ktx:$core_ktx_version"
}